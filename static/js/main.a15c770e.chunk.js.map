{"version":3,"sources":["components/Navbar/Navbar.js","components/Dialogs/Chat/Chat.js","utils/validators/validator.js","components/common/FormControls/FormsControl.js","components/Dialogs/ChatWindow/Message/Message.js","components/Dialogs/ChatWindow/ChatWindow.js","components/Dialogs/Dialogs.js","data/dialogsReducer.js","data/types.js","components/common/Preloader/Preloader.js","hoc/WithAuthRedirect.js","components/Dialogs/DialogsContainer.js","components/common/Paginator/Paginator.js","components/Users/User/User.js","api/api.js","data/usersReducer.js","components/Users/UsersContainer.js","data/profileReducer.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","data/authReducer.js","components/Header/Header.js","components/Header/HeaderContainer.js","components/Login/Login.js","App.js","serviceWorker.js","data/sidebarReducer.js","data/rootReducer.js","data/reduxStore.js","index.js"],"names":["Navbar","className","to","Chat","props","id","alt","src","name","lastMessage","requiredField","value","undefined","maxLengthCreator","maxLength","length","Input","input","meta","type","Message","sent","message","maxLength300","ReduxNewMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","style","backgroundImage","backgroundSize","ChatWindow","messages","map","key","values","dispatch","addMessage","newMessage","reset","Dialogs","chatList","chat","initialState","dialogsReducer","state","action","newMessageText","Preloader","mapStateToPropsForRedirect","isAuth","auth","isLoading","WithAuthRedirect","Component","RedirectComponent","this","React","connect","compose","dialogs","Paginator","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","portionCount","portionPages","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionNumber","disabled","onClick","filter","number","onPageChanged","currentPage","User","memo","user","photos","small","width","height","isFollowing","followed","unfollow","follow","instance","Axios","create","withCredentials","baseURL","headers","usersAPI","get","then","response","data","post","delete","profileAPI","put","status","authAPI","email","password","rememberMe","users","isFetching","followUnfollowActionCreator","target","toggleFollowingActionCreator","usersReducer","page","count","Users","pageNumber","getUsersThunkCreator","followThunkCreator","unfollowThunkCreator","UsersContainer","a","items","totalCount","resultCode","posts","text","isLiked","userProfile","updateStatusActionCreator","profileReducer","newPost","newPostText","profile","aboutMe","Post","likePost","ReduxNewPostForm","MyPosts","addPost","MyPostsContainer","addPostActionCreator","likePostActionCreator","ProfileStatus","toggleEditMode","editMode","setState","changeStatusText","e","newStatus","updateStatus","prevProps","prevState","autoFocus","onBlur","onChange","ProfileInfo","large","fullName","lookingForAJob","lookingForAJobDescription","contacts","facebook","href","github","instagram","mainLink","twitter","vk","website","youtube","Profile","ProfileContainer","userId","match","params","authorizedUserId","getProfileThunkCreator","updateStatusThunkCreator","withRouter","login","setAuthUserData","authenticationThunkCreator","authReducer","Header","logoutThunkCreator","HeaderContainer","ReduxLoginForm","error","color","loginThunkCreator","console","log","stopSubmit","_error","formData","App","exact","path","render","DialogsContainer","Boolean","window","location","hostname","sidebarReducer","rootReducer","combineReducers","sidebar","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"mpBA6BeA,EAzBA,WACX,OACI,yBAAKC,UAAU,OACX,6BACI,kBAAC,IAAD,CAASC,GAAG,YAAZ,YAEJ,6BACI,kBAAC,IAAD,CAASA,GAAG,SAAZ,SAEJ,6BACI,kBAAC,IAAD,CAASA,GAAG,YAAZ,aAEJ,6BACI,kBAAC,IAAD,CAASA,GAAG,UAAZ,UAEJ,6BACI,kBAAC,IAAD,CAASA,GAAG,UAAZ,UAEJ,6BACI,kBAAC,IAAD,CAASA,GAAG,aAAZ,eCLDC,G,cAdF,SAACC,GACV,OACI,kBAAC,IAAD,CAASH,UAAU,WAAWC,GAAI,YAAcE,EAAMC,IACtD,yBAAKJ,UAAU,gBACX,yBAAKA,UAAU,aACX,yBAAKK,IAAI,GAAGC,IAAI,sBAChB,uBAAGN,UAAU,QAAQG,EAAMI,OAE/B,uBAAGP,UAAU,eAAb,iBAA0CG,EAAMK,iB,0BCZ/CC,EAAgB,SAACC,GAC1B,OAAOA,OAAOC,EAAY,qBAGjBC,EAAmB,SAACC,GAAD,OAAe,SAACH,GAC5C,OAAOA,EAAMI,OAASD,EAAf,wBAA4CA,EAA5C,iBAAkEF,I,SCFhEI,G,OAAQ,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAgBb,GAAW,EAApBc,KAAoB,iCAC9C,OACI,yBAAKjB,UAAW,eACZ,yCAAOkB,KAAMf,EAAMe,MAAUF,EAAWb,OCKrCgB,G,cARC,SAAChB,GACb,OACQ,yBAAKH,UAAYG,EAAMiB,KAAO,OAAS,MACvC,uBAAGpB,UAAU,WAAWG,EAAMkB,YCCpCC,EAAeV,EAAiB,KAqBhCW,EAAsBC,YAAU,CAAEC,KAAK,kBAAjBD,EAnBL,SAACrB,GACpB,OACI,0BAAMH,UAAU,iBAAiB0B,SAAUvB,EAAMwB,cAC7C,kBAACC,EAAA,EAAD,CAAO5B,UAAU,kBACVO,KAAK,aACLsB,UAAWd,EACXe,YAAY,qBACZC,SAAU,CAACtB,EAAea,GAC1BJ,KAAK,SAEZ,4BAAQlB,UAAU,oBACVgC,MAAO,CAACC,gBAAiB,6BACjBC,eAAgB,eA6B7BC,EApBI,SAAChC,GAMhB,OACI,yBAAKH,UAAU,eACVG,EAAMiC,SAASC,KAAI,SAAAhB,GAAO,OACvB,kBAAC,EAAD,CACIjB,GAAIiB,EAAQjB,GACZiB,QAASA,EAAQA,QACjBD,KAAMC,EAAQD,KACdkB,IAAKjB,EAAQjB,QAErB,kBAACmB,EAAD,CAAqBG,SAbZ,SAACa,EAAQC,GACtBrC,EAAMsC,WAAWF,EAAOG,YACxBF,EAASG,YAAM,wBCNRC,EAvBC,SAACzC,GACb,OACI,6BACI,yBAAKH,UAAU,QACX,yBAAKA,UAAU,aACVG,EAAM0C,SAASR,KAAI,SAACS,GAAD,OAChB,kBAAC,EAAD,CACI1C,GAAI0C,EAAK1C,GACTG,KAAMuC,EAAKvC,KACXC,YAAasC,EAAKtC,YAClB8B,IAAKQ,EAAK1C,SAGtB,kBAAC,EAAD,CACIgC,SAAUjC,EAAMiC,SAChBK,WAAYtC,EAAMsC,gB,eClBlCM,EAAe,CACfF,SAAU,CACN,CAAEzC,GAAI,EAAGG,KAAM,QAASC,YAAa,SACrC,CAAEJ,GAAI,EAAGG,KAAM,QAASC,YAAa,iBACrC,CAAEJ,GAAI,EAAGG,KAAM,QAASC,YAAa,cACrC,CAAEJ,GAAI,EAAGG,KAAM,QAASC,YAAa,wBACrC,CAAEJ,GAAI,EAAGG,KAAM,QAASC,YAAa,yBAEzC4B,SAAU,CACN,CAAEhC,GAAI,EAAGiB,QAAS,QAASD,MAAM,GACjC,CAAEhB,GAAI,EAAGiB,QAAS,gBAAiBD,MAAM,GACzC,CAAEhB,GAAI,EAAGiB,QAAS,aAAcD,MAAM,GACtC,CAAEhB,GAAI,EAAGiB,QAAS,uBAAwBD,MAAM,GAChD,CAAEhB,GAAI,EAAGiB,QAAS,uBAAwBD,MAAM,KAwBzC4B,EApBe,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCAE5D,OAAQA,EAAOhC,MACX,ICpBmB,cDqBf,OAAO,2BACA+B,GADP,IAEIb,SAAS,GAAD,mBAAMa,EAAMb,UAAZ,CACR,CACIhC,GAAI6C,EAAMb,SAAStB,OAAS,EAC5BO,QAAS6B,EAAOC,eAChB/B,MAAM,OAIlB,QAAS,OAAO6B,I,eEtBTG,G,OARG,WACd,OACI,yBAAKpD,UAAU,oBACX,yBAAKA,UAAU,YAAYK,IAAI,GAAGC,IAAI,yBCD9C+C,EAA6B,SAACJ,GAAD,MAAY,CACzCK,OAAQL,EAAMM,KAAKD,OACnBE,UAAWP,EAAMM,KAAKC,YAGbC,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,uKAI/B,OAAGC,KAAKzD,MAAMqD,UAAkB,kBAAC,EAAD,MACvBI,KAAKzD,MAAMmD,OACb,kBAACI,EAAcE,KAAKzD,OADQ,kBAAC,IAAD,CAAUF,GAAI,eALlB,GAEX4D,IAAMH,WAStC,OADsCI,YAAQT,EAARS,CAAoCH,I,OCC/DI,cACXD,aAhBkB,SAACb,GACnB,MAAM,CACFb,SAAUa,EAAMe,QAAQ5B,SACxBS,SAAUI,EAAMe,QAAQnB,aAIP,SAACL,GACtB,MAAM,CACFC,WAAY,SAACC,GACTF,EJqBgD,CAAEtB,KCnCnC,cDmCsDiC,eIrBpCT,SAOzCe,EAFWM,CAGbnB,G,kBCeaqB,G,OApCG,SAAC9D,GAKf,IAHA,IAAI+D,EAAaC,KAAKC,KAAKjE,EAAMkE,gBAAkBlE,EAAMmE,UAErDC,EAAQ,GACHC,EAAI,EAAGA,GAAKN,EAAYM,IAC7BD,EAAME,KAAKD,GAEf,IAAIE,EAAeP,KAAKC,KAAKF,EAAa/D,EAAMwE,cARvB,EASeC,mBAAS,GATxB,mBASpBC,EAToB,KASLC,EATK,KAUrBC,GAAyBF,EAAgB,GAAK1E,EAAMwE,aAAe,EACnEK,EAAqBH,EAAgB1E,EAAMwE,aAC/C,OACI,yBAAK3E,UAAU,SACX,4BAAQiF,SAAoC,IAA1BF,EACVG,QAAS,kBAAMJ,EAAiBD,EAAgB,KADxD,QAGCN,EAAMY,QAAO,SAAAC,GAAM,OAAIA,GAAUL,GAAyBK,GAAUJ,KACpE3C,KAAI,SAAC+C,GACF,OACI,0BAAM9C,IAAK8C,EACLF,QAAS,WAAQ/E,EAAMkF,cAAcD,IACrCpF,UAAWG,EAAMmF,cAAgBF,EAAS,eAAiB,IAChEA,MAMT,4BAAQH,SAAUP,EAAeR,EACzBgB,QAAS,kBAAMJ,EAAiBD,EAAgB,KADxD,WCSGU,G,OArCF1B,IAAM2B,MAAK,SAAArF,GACpB,OACI,6BAEQ,yBAAKH,UAAU,cAAcsC,IAAKnC,EAAMsF,KAAKrF,IACzC,yBAAKJ,UAAU,2BACX,6BACI,kBAAC,IAAD,CAASC,GAAI,YAAcE,EAAMsF,KAAKrF,IAClC,yBAAKJ,UAAU,UACXK,IAAI,GAAGC,IAAKH,EAAMsF,KAAKC,OAAOC,MAAQxF,EAAMsF,KAAKC,OAAOC,MAAQ,oBAChE3D,MAAO,CACH4D,MAAO,MACPC,OAAQ,WAIxB,0BAAM7F,UAAU,mBACZ,6BAAMG,EAAMsF,KAAKlF,MACjB,gDAGR,6BACQ,4BAAQP,UAAU,eACdiF,SAAU9E,EAAMsF,KAAKK,cAAgB3F,EAAMsF,KAAKrF,GAAI8E,QAAS,WAC7D/E,EAAMsF,KAAKM,SACP5F,EAAM6F,SAAS7F,EAAMsF,KAAKrF,IAE1BD,EAAM8F,OAAO9F,EAAMsF,KAAKrF,MAC5BD,EAAMsF,KAAKM,SAAW,WAAa,iB,kCC9B7DG,E,OAAWC,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAINC,EAAW,WACuB,IAAjClB,EAAgC,uDAAlB,EAAGhB,EAAe,uDAAJ,GAClC,OAAO4B,EAASO,IAAT,qBAA2BnB,EAA3B,kBAAgDhB,IAClDoC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAH1BJ,EAAW,SAObpG,GACH,OAAO8F,EAASW,KAAT,iBAAwBzG,IAC1BsG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAT1BJ,EAAW,SAYXpG,GACL,OAAO8F,EAASY,OAAT,iBAA0B1G,IAC5BsG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAI1BG,EAAa,SACX3G,GACP,OAAO8F,EAASO,IAAI,WAAarG,GAC5BsG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAH1BG,EAAa,SAKT1F,GACT,OAAO6E,EAASc,IAAT,kBAAgC,CAAEC,OAAQ5F,KAI5C6F,EAAU,WAEf,OAAOhB,EAASO,IAAT,WACNC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAHtBM,EAAU,SAKbC,EAAOC,EAAUC,GACnB,OAAOnB,EAASW,KAAT,2BAAkCM,EAAlC,qBAAoDC,EAApD,uBAA2EC,IAC7EX,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAP1BM,EAAU,WAUf,OAAOhB,EAASY,OAAT,eC5CX/D,EAAe,CACfuE,MAAO,GACPhD,SAAU,GACVK,aAAc,GACdN,gBAAiB,EACjBiB,YAAa,EACbiC,YAAY,EACZzB,YAAa,MAqCX0B,GAA8B,SAACpH,GAAD,MAC/B,CAAEc,KP9CwB,kBO8CDuG,OAAQrH,IAWhCsH,GAA+B,SAACD,GAAD,MAChC,CAAEvG,KPnDyB,mBOmDDuG,WA8BhBE,GA7EM,WAAmC,IAAlC1E,EAAiC,uDAAzBF,EAAcG,EAAW,uCACnD,OAAQA,EAAOhC,MACX,IPbuB,kBOcnB,OAAO,2BACA+B,GADP,IAEIqE,MAAM,YAAKrE,EAAMqE,MAAMjF,KAAI,SAAAoD,GACvB,GAAIA,EAAKrF,KAAO8C,EAAOuE,OAAQ,CAC3B,IAAI1B,EAAWN,EAAKM,SACpB,OAAO,2BAAKN,GAAZ,IAAkBM,UAAWA,IAEjC,OAAON,QAInB,IPxBiB,YOyBb,OAAO,2BAAKxC,GAAZ,IAAmBqE,MAAM,YAAKpE,EAAOoE,SAEzC,IP1BwB,mBO2BpB,OAAO,2BAAKrE,GAAZ,IAAmBqC,YAAapC,EAAO0E,OAE3C,IP5B6B,wBO6BzB,OAAO,2BAAK3E,GAAZ,IAAmBoB,gBAAiBnB,EAAO2E,QAE/C,IP9BuB,kBO+BnB,IAAIN,EAAatE,EAAMsE,WACvB,OAAO,2BAAKtE,GAAZ,IAAmBsE,YAAaA,IAEpC,IP/BwB,mBOgCpB,OAAO,2BAAKtE,GAAZ,IAAmB6C,YAAa5C,EAAOuE,SAE3C,QAAS,OAAOxE,IC9BlB6E,G,4MAMFzC,cAAgB,SAAC0C,GACb,EAAK5H,MAAM6H,qBAAqBD,EAAY,EAAK5H,MAAMmE,W,kEAJvDV,KAAKzD,MAAM6H,qBAAqBpE,KAAKzD,MAAMmF,YAAa1B,KAAKzD,MAAMmE,Y,+BAO7D,IAAD,OACL,OACI,yBAAKtE,UAAU,gBACV4D,KAAKzD,MAAMoH,WAAa,kBAAC,EAAD,MACrB,6BACI,kBAAC,EAAD,CAAWlD,gBAAiBT,KAAKzD,MAAMkE,gBACnCC,SAAUV,KAAKzD,MAAMmE,SACrBK,aAAcf,KAAKzD,MAAMwE,aACzBW,YAAa1B,KAAKzD,MAAMmF,YACxBD,cAAezB,KAAKyB,gBAGpBzB,KAAKzD,MAAMmH,MAAMjF,KAAI,SAAAoD,GACjB,OACI,kBAAC,EAAD,CAAMnD,IAAKmD,EAAKrF,GACZqF,KAAMA,EACNK,YAAa,EAAK3F,MAAM2F,YACxBG,OAAQ,EAAK9F,MAAM8H,mBACnBjC,SAAU,EAAK7F,MAAM+H,gC,GA5BzCrE,IAAMH,WA6DXyE,GAVQpE,YACnBD,aAZkB,SAACb,GACnB,MAAO,CACHqE,MAAOrE,EAAMqE,MAAMA,MACnBhD,SAAUrB,EAAMqE,MAAMhD,SACtBK,aAAc1B,EAAMqE,MAAM3C,aAC1BN,gBAAiBpB,EAAMqE,MAAMjD,gBAC7BiB,YAAarC,EAAMqE,MAAMhC,YACzBiC,WAAYtE,EAAMqE,MAAMC,WACxBzB,YAAa7C,EAAMqE,MAAMxB,eAIJ,CACrBkC,qBDJ4B,SAAC1C,EAAahB,GAAd,8CAA2B,WAAO9B,GAAP,eAAA4F,EAAA,6DAC3D5F,EANC,CAAEtB,KPnDwB,oBOwDgC,SAEpCsF,EAAkBlB,EAAahB,GAFK,OAErDqC,EAFqD,OAG3DnE,EAdC,CAAEtB,KPhDkB,YOgDDoG,MAcWX,EAAS0B,QACxC7F,EAZC,CAAEtB,KPjD8B,wBOiDD2G,MAYSlB,EAAS2B,aAClD9F,EAVC,CAAEtB,KPnDwB,oBOwDgC,2CAA3B,uDCK5B+G,mBDG0B,SAAC7H,GAAD,8CAAQ,WAAOoC,GAAP,SAAA4F,EAAA,6DACtC5F,EAASkF,GAA6BtH,IADA,SAEjBoG,EAAgBpG,GAFC,OAGV,IAHU,OAGzBmI,YACT/F,EAASgF,GAA4BpH,IAEzCoC,EAASkF,MAN6B,2CAAR,uDCF1BQ,qBDY4B,SAAC9H,GAAD,8CAAQ,WAAOoC,GAAP,SAAA4F,EAAA,6DACxC5F,EAASkF,GAA6BtH,IADE,SAEjBoG,EAAkBpG,GAFD,OAGZ,IAHY,OAG3BmI,YACT/F,EAASgF,GAA4BpH,IAEzCoC,EAASkF,MAN+B,2CAAR,yDCThCjE,EAPmBM,CAQrB+D,ICtEE/E,I,OAAe,CACfyF,MAAO,CACH,CAAEpI,GAAI,EAAGqI,KAAM,gEAAeC,SAAS,GACvC,CAAEtI,GAAI,EAAGqI,KAAM,gEAAeC,SAAS,IAE3CC,YAAa,KACb1B,OAAQ,KAgDN2B,GAA4B,SAACvH,GAC/B,MAAO,CACHH,KThDqB,gBSgDAG,YA0BdwH,GAzEe,WAAmC,IAAlC5F,EAAiC,uDAAzBF,GAAcG,EAAW,uCAE5D,OAAQA,EAAOhC,MACX,ITfgB,WSgBZ,IAAI4H,EAAU,CACV1I,GAAI6C,EAAMuF,MAAM1H,OAAS,EACzB2H,KAAMvF,EAAO6F,YACbL,SAAS,GAEb,OAAO,2BACAzF,GADP,IAEIuF,MAAM,GAAD,mBAAMvF,EAAMuF,OAAZ,CAAmBM,MAEhC,ITxBiB,YSyBb,kCACO7F,GADP,IAEIuF,MAAM,YAAKvF,EAAMuF,MAAMnG,KAAI,SAAAwE,GACvB,GAAGA,EAAKzG,KAAO8C,EAAO9C,GAAG,CACrB,IAAIsI,EAAU7B,EAAK6B,QACnB,OAAO,2BAAI7B,GAAX,IAAiB6B,SAAUA,IAE/B,OAAO7B,QAGnB,IT5BwB,mBS6BpB,OAAO,2BACA5D,GADP,IAEI0F,YAAazF,EAAO8F,QACpB/B,OAAQ/D,EAAO8F,QAAQC,UAE/B,IT/BqB,gBSgCjB,OAAO,2BACAhG,GADP,IAEIgE,OAAQ/D,EAAO7B,UAEvB,QAAS,OAAO4B,ICvBTiG,I,cArBF,SAAC/I,GACV,OACI,yBAAKH,UAAU,QACP,yBAAKA,UAAU,aACX,yBAAKK,IAAI,GAAGC,IAAI,sBAChB,uBAAGN,UAAU,QAAb,SAEJ,uBAAGA,UAAU,aAAaG,EAAMsI,MAChC,yBAAKzI,UAAU,qBACX,0BAAMA,UAAU,aAChBgC,MAAO,CACHC,gBAAgB,sBAAD,OAAwB9B,EAAMuI,QAAU,MAAQ,QAAhD,SACfxG,eAAgB,SAEpBgD,QAAS,kBAAM/E,EAAMgJ,SAAShJ,EAAMC,WCVlDkB,GAAeV,EAAiB,KAiBhCwI,GAAmB5H,YAAU,CAAEC,KAAM,eAAlBD,EAfL,SAACrB,GACjB,OACI,0BAAMH,UAAU,cAAc0B,SAAUvB,EAAMwB,cAC1C,kBAACC,EAAA,EAAD,CAAOC,UAAWd,EACdf,UAAU,eACVO,KAAK,UACLuB,YAAY,eACZC,SAAU,CAACtB,EAAea,IAC1BJ,KAAK,SAET,4BAAQlB,UAAU,iBAAlB,gBA2BGqJ,GApBC,SAAClJ,GAMb,OACI,yBAAKH,UAAU,WACX,kBAACoJ,GAAD,CAAkB1H,SAPV,SAACa,EAAQC,GACrBrC,EAAMmJ,QAAQ/G,EAAOuG,SACrBtG,EAASG,YAAM,mBAMVxC,EAAMqI,MAAMnG,KAAI,SAAAwE,GAAI,OAAI,kBAAC,GAAD,CACrBzG,GAAIyG,EAAKzG,GACTqI,KAAM5B,EAAK4B,KACXC,QAAS7B,EAAK6B,QACdS,SAAUhJ,EAAMgJ,SAChB7G,IAAKuE,EAAKzG,UCjBXmJ,GAFUzF,aAjBH,SAACb,GACnB,MAAO,CACHuF,MAAOvF,EAAM+F,QAAQR,UAIJ,SAAChG,GACtB,MAAO,CACH8G,QAAS,SAACP,GACNvG,EHwDwB,SAACuG,GAAD,MAAkB,CAAE7H,KTrEhC,WSqEgD6H,eGxDnDS,CAAqBT,KAElCI,SAAU,SAAC/I,GACPoC,EH+CyB,SAACpC,GAClC,MAAO,CACHc,KThEiB,YSgEAd,MGjDJqJ,CAAsBrJ,QAKlB0D,CAA6CuF,ICwCvDK,I,yDAzDX,WAAYvJ,GAAQ,IAAD,8BACf,cAAMA,IAOVwJ,eAAiB,WACb,IAAIC,EAAW,EAAK3G,MAAM2G,SAC1B,EAAKC,SAAS,CACVD,UAAWA,KAXA,EAenBE,iBAAmB,SAACC,GAChB,EAAKF,SAAS,CACVG,UAAWD,EAAEtC,OAAO/G,SAjBT,EAqBnBuJ,aAAe,WACX,EAAK9J,MAAM8J,aAAa,EAAKhH,MAAM+G,WACnC,EAAKH,SAAS,CACV5C,OAAQ,EAAK9G,MAAM8G,SAEvB,EAAK0C,kBAxBL,EAAK1G,MAAQ,CACT2G,UAAU,EACVI,UAAW,EAAK7J,MAAM8G,OAAS,EAAK9G,MAAM8G,OAAS,IAJxC,E,+DA6BAiD,EAAWC,GACvBD,EAAUjD,SAAWrD,KAAKzD,MAAM8G,QAC/BrD,KAAKiG,SAAS,CACVG,UAAWpG,KAAKzD,MAAM8G,W,+BAM9B,OACI,oCACMrD,KAAKX,MAAM2G,SACT,2BAAO1I,KAAK,OACLkJ,WAAW,EACXC,OAAQzG,KAAKqG,aACbvJ,MAAOkD,KAAKX,MAAM+G,UAClBM,SAAU1G,KAAKkG,mBAGtB,uBAAG9J,UAAU,gBAAgBkF,QAAStB,KAAK+F,gBACtC/F,KAAKzD,MAAM8G,OAAS,WAAarD,KAAKzD,MAAM8G,OAAS,kB,GAlDlDpD,IAAMH,YC0CnB6G,GAzCK,SAACpK,GACjB,OACI,yBAAKH,UAAU,eACX,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,iBACX,yBAAKK,IAAI,GAAGC,IAAKH,EAAMwI,YAAYjD,OAAO8E,MAAQrK,EAAMwI,YAAYjD,OAAO8E,MAAQ,uBAEvF,yBAAKxK,UAAU,qBACX,uBAAGA,UAAU,eACRG,EAAMwI,YAAY8B,UAExB,kBAAC,GAAD,CAAexD,OAAQ9G,EAAM8G,OACdgD,aAAc9J,EAAM8J,iBAItC,wBAAIjK,UAAU,sBACV,wBAAIA,UAAU,+BAAd,qBAEKG,EAAMwI,YAAY+B,eAAiB,OAAS,OAEjD,wBAAI1K,UAAU,oCAAd,6BAC+BG,EAAMwI,YAAYgC,0BAA4BxK,EAAMwI,YAAYgC,0BAA4B,MAE3H,wBAAI3K,UAAU,mBACTG,EAAMwI,YAAYiC,SAASC,SAAW,yCAAc,uBAAGC,KAAK,YAAa3K,EAAMwI,YAAYiC,SAASC,UAA9D,KAAoF,KAC1H1K,EAAMwI,YAAYiC,SAASG,OAAS,uCAAY,uBAAGD,KAAK,YAAY3K,EAAMwI,YAAYiC,SAASG,SAAmB,KAClH5K,EAAMwI,YAAYiC,SAASI,UAAY,0CAAe,uBAAGF,KAAK,YAAY3K,EAAMwI,YAAYiC,SAASI,YAAsB,KAC3H7K,EAAMwI,YAAYiC,SAASK,SAAW,yCAAc,uBAAGH,KAAK,YAAY3K,EAAMwI,YAAYiC,SAASK,WAAqB,KACxH9K,EAAMwI,YAAYiC,SAASM,QAAU,wCAAa,uBAAGJ,KAAK,YAAY3K,EAAMwI,YAAYiC,SAASM,UAAoB,KACrH/K,EAAMwI,YAAYiC,SAASO,GAAK,mCAAQ,uBAAGL,KAAK,YAAY3K,EAAMwI,YAAYiC,SAASO,KAAe,KACtGhL,EAAMwI,YAAYiC,SAASQ,QAAU,wCAAa,uBAAGN,KAAK,YAAY3K,EAAMwI,YAAYiC,SAASQ,UAAoB,KACrHjL,EAAMwI,YAAYiC,SAASS,QAAU,wCAAa,uBAAGP,KAAK,YAAY3K,EAAMwI,YAAYiC,SAASS,UAAoB,SCX3HC,GAnBC,SAACnL,GACb,OAAIA,EAAMwI,YAIN,yBAAK3I,UAAU,WACX,yBAAKgC,MAAO,CAAEC,gBAAiB,6BAC3BjC,UAAU,gBAGd,kBAAC,GAAD,CAAa2I,YAAaxI,EAAMwI,YACnB1B,OAAQ9G,EAAM8G,OACdgD,aAAc9J,EAAM8J,eAEjC,kBAAC,GAAD,OAZG,kBAAC,EAAD,OCATsB,G,kLAEE,IAAIC,EAAS5H,KAAKzD,MAAMsL,MAAMC,OAAOF,OAChCA,IACDA,EAAS5H,KAAKzD,MAAMwL,kBAExB/H,KAAKzD,MAAMyL,uBAAuBJ,K,+BAIlC,OACI,kBAAC,GAAD,CACI7C,YAAa/E,KAAKzD,MAAMwI,YACxB1B,OAAQrD,KAAKzD,MAAM8G,OACnBgD,aAAcrG,KAAKzD,MAAM0L,+B,GAdVhI,IAAMH,WA0BtBK,eACXD,aAPkB,SAACb,GAAD,MAAY,CAC9B0F,YAAa1F,EAAM+F,QAAQL,YAC3B1B,OAAQhE,EAAM+F,QAAQ/B,OACtB0E,iBAAkB1I,EAAMM,KAAKnD,MAIJ,CAAEwL,uBPoCO,SAACJ,GAAD,8CAAY,WAAOhJ,GAAP,eAAA4F,EAAA,sEACzBrB,EAAsByE,GADG,OAC1C7E,EAD0C,OAE9CnE,EArBO,CACHtB,KT7CwB,mBS6CA8H,QAoBSrC,IAFS,2CAAZ,uDOpCiBkF,yBP2Cf,SAACxK,GAAD,8CAAa,WAAOmB,GAAP,SAAA4F,EAAA,sEAC5BrB,EAAwB1F,GADI,OAEhB,IAFgB,OAEpCuF,KAAK2B,YACd/F,EAASoG,GAA0BvH,IAHU,2CAAb,yDO1CpCyK,IACArI,EAHWM,CAIbwH,IClCExI,GAAe,CACf3C,GAAI,KACJ+G,MAAO,KACP4E,MAAO,KACPzI,QAAQ,EACRE,WAAW,GAqBTwI,GAAkB,SAAC5L,EAAI+G,EAAO4E,GAAZ,MACnB,CAAE7K,KjBtBsB,gBiBsBD0F,KAAM,CAAExG,KAAI+G,QAAO4E,WAKlCE,GAA6B,yDAAM,WAAOzJ,GAAP,uBAAA4F,EAAA,sEACvBlB,IADuB,OAEhB,KADxBP,EADwC,QAE/B4B,YAAmB,EACD5B,EAASC,KAA9BxG,EADqB,EACrBA,GAAI2L,EADiB,EACjBA,MAAO5E,EADU,EACVA,MACjB3E,EAASwJ,GAAgB5L,EAAI+G,EAAO4E,IACpCvJ,EAPH,CAAEtB,KjBtBqB,kBiB8BjBsB,EARN,CAAEtB,KjBtBqB,iBiBwBoB,2CAAN,uDAgC3BgL,GAxDK,WAAmC,IAAlCjJ,EAAiC,uDAAzBF,GAAcG,EAAW,uCAClD,OAAQA,EAAOhC,MACX,IjBLqB,gBiBMjB,IAAIoC,EAASL,EAAMK,OACnB,OAAO,uCACAL,GACAC,EAAO0D,MAFd,IAGItD,QAASA,IAEjB,IjBToB,eiBUhB,OAAO,2BACAL,GADP,IAEIO,WAAW,IAEnB,QAAS,OAAOP,ICJTkJ,I,OAlBA,SAAChM,GACZ,OACI,gCACI,kBAAC,IAAD,CAASF,GAAG,KACR,yBAAKI,IAAI,GAAGC,IAAI,oBAEpB,yBAAKN,UAAU,cACdG,EAAMmD,OACH,4BAAQtD,UAAU,eAAekF,QAAS/E,EAAMiM,mBAAoBnM,GAAI,UACpE,QAEN,SCVRoM,G,uKAEE,OAAO,kBAAC,GAAWzI,KAAKzD,W,GAFF0D,IAAMH,WAUrBI,gBAJS,SAACb,GAAD,MAAY,CAChCK,OAAQL,EAAMM,KAAKD,UAGiB,CAAE8I,mBF4CR,yDAAM,WAAO5J,GAAP,SAAA4F,EAAA,sEACflB,IADe,OAEH,IAFG,OAEvBN,KAAK2B,YACd/F,EAASwJ,GAAgB,KAAM,KAAM,OAHL,2CAAN,wDE5CnBlI,CAAiDuI,IC+B1DC,I,OAAiB9K,YAAU,CAAEC,KAAM,SAAlBD,EArCL,SAACrB,GACf,OACI,0BAAMuB,SAAUvB,EAAMwB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOE,YAAa,QAChBvB,KAAM,QACNW,KAAK,OACLW,UAAWd,EACXgB,SAAU,CAACtB,MAGnB,6BACI,kBAACmB,EAAA,EAAD,CAAOE,YAAa,WAChBvB,KAAM,WACNW,KAAK,WACLW,UAAWd,EACXgB,SAAU,CAACtB,MAGjBN,EAAMoM,OACJ,6BACI,uBAAGvK,MAAO,CAACwK,MAAO,QAASrM,EAAMoM,QAGzC,6BACI,kBAAC3K,EAAA,EAAD,CAAOV,KAAK,WACRX,KAAM,aACNsB,UAAWd,IAHnB,gBAMA,6BACI,+CAgCD+C,gBANS,SAACb,GACrB,MAAO,CACHK,OAAQL,EAAMM,KAAKD,UAIa,CAAEmJ,kBHzBT,SAACtF,EAAOC,GAAR,IAAkBC,EAAlB,sGAAyC,WAAO7E,GAAP,iBAAA4F,EAAA,sEACjDlB,EAAcC,EAAOC,EAAUC,GADkB,OAE1C,KADxBV,EADkE,QAEzD4B,WACT/F,EAASyJ,OAETS,QAAQC,IAAIhG,GACN4F,EAAQ5F,EAASvE,SACvBI,EAASoK,YAAW,QAAS,CAAEC,OAAQN,MAP2B,2CAAzC,wDGyBlBzI,EAxBD,SAAC3D,GAKX,OAAIA,EAAMmD,OACC,kBAAC,IAAD,CAAUrD,GAAI,aAGrB,yBAAKD,UAAU,aACX,qCACA,kBAACsM,GAAD,CAAgB5K,SAVP,SAACoL,GACd3M,EAAMsM,kBAAkBK,EAAS3F,MAAO2F,EAAS1F,SAAU0F,EAASzF,eAUhE,yFACA,+EChDN0F,G,kLAEFnJ,KAAKzD,MAAM8L,+B,+BAGX,OACE,6BACE,kBAAC,GAAD,MACA,yBAAKjM,UAAU,iBACf,yBAAKA,UAAU,eACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,eACb,kBAAC,IAAD,CAAOgN,OAAK,EAACC,KAAK,IAChBC,OAAQ,kBAAM,kBAAC,GAAD,SAEhB,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,WAChBC,OAAQ,kBAAM,kBAACC,EAAD,SAEhB,kBAAC,IAAD,CAAOF,KAAK,oBACVC,OAAQ,kBAAM,kBAAC,GAAD,SAEhB,kBAAC,IAAD,CAAOD,KAAK,SACVC,OAAQ,kBAAM,kBAAC,GAAD,SAEhB,kBAAC,IAAD,CAAOD,KAAK,SACVC,OAAQ,kBAAM,kBAAC,GAAD,iB,GAzBVrJ,IAAMH,WAmCTK,eACb+H,IACAhI,YAAQ,KAAM,CAACmI,gCAFFlI,CAGZgJ,ICvCiBK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS9B,MACvB,2D,cClBF1I,GAAe,GAMJyK,GAJQ,WAAmC,IAAlCvK,EAAiC,uDAAzBF,GAC5B,OAAOE,G,UCcIwK,GATGC,YAAgB,CAC9B1E,QAASH,GACT7E,QAAShB,EACT2K,QAASH,GACTlG,MAAOK,GACPpE,KAAM2I,GACNzK,KAAMmM,OCVJC,GAAmBR,OAAOS,sCAAwC/J,IAKzDgK,GAJDC,YAAYP,GAAcI,GACpCI,YAAgBC,QCGpBC,IAASjB,OACL,kBAAC,IAAD,CAAYkB,SAAUC,wBAClB,kBAAC,IAAD,CAAUN,MAAOA,IACb,kBAAC,GAAD,QAGRO,SAASC,eAAe,SJoHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhI,MAAK,SAAAiI,GACJA,EAAaC,gBAEdC,OAAM,SAAAtC,GACLG,QAAQH,MAAMA,EAAMlL,c","file":"static/js/main.a15c770e.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Navbar.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"nav\">\r\n            <div>\r\n                <NavLink to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/news\">News</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/dialogs\">Messages</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/music\">Music</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/settings\">Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\nimport './Chat.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Chat = (props) => {\r\n    return (\r\n        <NavLink className=\"chatLink\" to={\"/dialogs/\" + props.id}>\r\n        <div className=\"chat_wrapper\">\r\n            <div className=\"user_info\">\r\n                <img alt=\"\" src=\"./img/userAva.jpg\" />\r\n                <p className=\"name\">{props.name}</p>\r\n            </div>\r\n            <p className=\"lastMessage\">Last message: {props.lastMessage}</p>\r\n        </div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default Chat","export const requiredField = (value) => {\r\n    return value? undefined : \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    return value.length > maxLength ? `Max length is ${maxLength} symbols` : undefined\r\n}","import React from 'react'\r\nimport \"./FormsControl.css\"\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    return (\r\n        <div className={\"formControl\"}>\r\n            <input type={props.type} {...input} {...props} />\r\n        </div>\r\n        \r\n    )\r\n}","import React from 'react'\r\nimport './Message.css'\r\n\r\nconst Message = (props) => {\r\n    return(\r\n            <div className= {props.sent ? \"sent\" : null} >\r\n            <p className=\"message\">{props.message}</p>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Field, reduxForm, reset } from 'redux-form'\r\nimport { maxLengthCreator, requiredField } from '../../../utils/validators/validator'\r\nimport { Input } from '../../common/FormControls/FormsControl'\r\nimport './ChatWindow.css'\r\nimport Message from './Message/Message'\r\n\r\nconst maxLength300 = maxLengthCreator(300)\r\n\r\nconst NewMessageForm = (props) => {\r\n    return (\r\n        <form className=\"newMessageForm\" onSubmit={props.handleSubmit}>\r\n            <Field className=\"newMessageInput\"\r\n                   name=\"newMessage\" \r\n                   component={Input} \r\n                   placeholder=\"Enter your message\"\r\n                   validate={[requiredField, maxLength300]}\r\n                   type=\"text\" \r\n            />\r\n            <button className=\"sendMessageButton\"\r\n                    style={{backgroundImage: \"url(./img/sendMessage.png)\",\r\n                            backgroundSize: \"cover\"\r\n                    }}\r\n            ></button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxNewMessageForm = reduxForm({ form:\"NewMessageForm\"})(NewMessageForm)\r\n\r\nconst ChatWindow = (props) => {\r\n\r\n    let addMessage = (values, dispatch) => {\r\n        props.addMessage(values.newMessage)\r\n        dispatch(reset('NewMessageForm'))\r\n    }\r\n    return (\r\n        <div className=\"chat_window\">\r\n            {props.messages.map(message =>\r\n                <Message\r\n                    id={message.id}\r\n                    message={message.message}\r\n                    sent={message.sent}\r\n                    key={message.id}\r\n                />)}\r\n            <ReduxNewMessageForm onSubmit={addMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatWindow","import React from 'react'\r\nimport './Dialogs.css'\r\nimport Chat from './Chat/Chat'\r\nimport ChatWindow from './ChatWindow/ChatWindow'\r\n\r\nconst Dialogs = (props) => {\r\n    return (\r\n        <div>\r\n            <div className=\"chat\">\r\n                <div className=\"chat_list\">\r\n                    {props.chatList.map((chat) => \r\n                        <Chat \r\n                            id={chat.id} \r\n                            name={chat.name} \r\n                            lastMessage={chat.lastMessage}\r\n                            key={chat.id}\r\n                        />)}\r\n                </div>\r\n                <ChatWindow \r\n                    messages={props.messages} \r\n                    addMessage={props.addMessage}  \r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import { ADD_MESSAGE } from \"./types\"\r\n\r\nlet initialState = {\r\n    chatList: [\r\n        { id: 1, name: \"User1\", lastMessage: \"Hello\" },\r\n        { id: 2, name: \"User2\", lastMessage: \"How are you ?\" },\r\n        { id: 3, name: \"User3\", lastMessage: \"I need you\" },\r\n        { id: 4, name: \"User4\", lastMessage: \"We can to meet today\" },\r\n        { id: 5, name: \"User5\", lastMessage: \"I'll give you 5 000$\" }\r\n    ],\r\n    messages: [\r\n        { id: 1, message: \"Hello\", sent: true },\r\n        { id: 2, message: \"How are you ?\", sent: true },\r\n        { id: 3, message: \"I need you\", sent: false },\r\n        { id: 4, message: \"We can to meet today\", sent: false },\r\n        { id: 5, message: \"I'll give you 5 000$\", sent: false }\r\n    ]\r\n}\r\n\r\nexport const dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages,\r\n                {\r\n                    id: state.messages.length + 1,\r\n                    message: action.newMessageText,\r\n                    sent: true\r\n                }\r\n                ]\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (newMessageText) => ({ type: ADD_MESSAGE, newMessageText })\r\n\r\nexport default dialogsReducer","export const ADD_POST = 'ADD-POST'\r\nexport const LIKE_POST = 'LIKE_POST'\r\nexport const ADD_MESSAGE = 'ADD-MESSAGE'\r\nexport const FOLLOW_UNFOLLOW = 'FOLLOW_UNFOLLOW'\r\nexport const SET_USERS = 'SET_USERS'\r\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nexport const SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nexport const TOGGLE_FETCHING = 'TOGGLE_FETCHING'\r\nexport const SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nexport const SET_USER_DATA = 'SET_USER_DATA'\r\nexport const TOGGLE_FOLLOWING = 'TOGGLE_FOLLOWING' \r\nexport const UPDATE_STATUS = 'UPDATE_STATUS'\r\nexport const STOP_LOADING = 'STOP_LOADING'","import React from 'react'\r\nimport './Preloader.css'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className=\"preloaderWrapper\">\r\n            <img className=\"preloader\" alt=\"\" src=\"./img/loading.gif\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Preloader from '../components/common/Preloader/Preloader'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    isLoading: state.auth.isLoading\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {    \r\n                if(this.props.isLoading) return <Preloader />      \r\n                else if(!this.props.isAuth) return <Redirect to={'/login'} />\r\n                return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n     let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}","import Dialogs from './Dialogs'\r\nimport { addMessageActionCreator } from '../../data/dialogsReducer'\r\nimport { connect } from 'react-redux'\r\nimport { WithAuthRedirect } from '../../hoc/WithAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        messages: state.dialogs.messages,\r\n        chatList: state.dialogs.chatList,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        addMessage: (newMessage) => {\r\n            dispatch(addMessageActionCreator(newMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs)","import React, { useState } from 'react'\r\nimport './Paginator.css'\r\n\r\nconst Paginator = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / props.portionPages)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * props.portionPages + 1\r\n    let rightPortionNumber = portionNumber * props.portionPages\r\n    return (\r\n        <div className=\"pages\">\r\n            <button disabled={leftPortionPageNumber === 1}\r\n                    onClick={() => setPortionNumber(portionNumber - 1)}\r\n            >Prev</button>\r\n            {pages.filter(number => number >= leftPortionPageNumber && number <= rightPortionNumber)\r\n            .map((number) => {\r\n                return (\r\n                    <span key={number} \r\n                          onClick={() => { props.onPageChanged(number) }} \r\n                          className={props.currentPage === number ? \"selectedPage\" : \"\"}>\r\n                    {number}\r\n                    </span>\r\n                )\r\n            })\r\n            }\r\n            \r\n            <button disabled={portionCount > pagesCount} \r\n                    onClick={() => setPortionNumber(portionNumber + 1)}\r\n            >Next</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './User.css'\r\n\r\nconst User = React.memo(props => {\r\n    return (\r\n        <div>\r\n            {\r\n                <div className=\"userWrapper\" key={props.user.id}>\r\n                    <div className=\"userPhotoAndDescription\">\r\n                        <div>\r\n                            <NavLink to={\"/profile/\" + props.user.id}>\r\n                                <img className=\"userAva\" \r\n                                    alt=\"\" src={props.user.photos.small ? props.user.photos.small : './img/userAva.jpg'}\r\n                                    style={{\r\n                                        width: '3vw',\r\n                                        height: '3vw'\r\n                                    }} />\r\n                            </NavLink>\r\n                        </div>\r\n                        <span className=\"userDescription\">\r\n                            <div>{props.user.name}</div>\r\n                            <div>city, country</div>\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                            <button className=\"followButton\" \r\n                                disabled={props.user.isFollowing === props.user.id} onClick={() => {\r\n                                props.user.followed ?\r\n                                    props.unfollow(props.user.id)\r\n                                    :\r\n                                    props.follow(props.user.id)\r\n                            }}>{props.user.followed ? \"Unfollow\" : \"Follow\"}\r\n                            </button>\r\n                        </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default User","import Axios from 'axios'\r\n\r\nconst instance = Axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"c55543ad-6e9a-483f-a185-8d28d075d131\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers (currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    \r\n    },\r\n    \r\n    follow(id) {\r\n        return instance.post(`follow/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n    \r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(id) {   \r\n        return instance.get(`profile/` + id)\r\n            .then(response => response.data)\r\n    },\r\n    updateStatus(message) {\r\n        return instance.put(`profile/status/`, { status: message })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authentication() {\r\n        return instance.get(`auth/me`)\r\n        .then(response => response.data)\r\n    },\r\n    login(email, password, rememberMe) {\r\n        return instance.post(`auth/login?email=${email}&password=${password}&rememberMe=${rememberMe}`)\r\n            .then(response => response.data)\r\n    },\r\n    logout () {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}","\r\nimport { usersAPI } from \"../api/api\"\r\nimport { FOLLOW_UNFOLLOW, SET_USERS, SET_CURRENT_PAGE, SET_TOTAL_USERS_COUNT, TOGGLE_FETCHING, TOGGLE_FOLLOWING } from \"./types\"\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    portionPages: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    isFollowing: null\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW_UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: [...state.users.map(user => {\r\n                    if (user.id === action.target) {\r\n                        let followed = user.followed\r\n                        return { ...user, followed: !followed }\r\n                    }\r\n                    return user\r\n                })]\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return { ...state, users: [...action.users] }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.page }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count }\r\n        }\r\n        case TOGGLE_FETCHING: {\r\n            let isFetching = state.isFetching\r\n            return { ...state, isFetching: !isFetching }\r\n        }\r\n        case TOGGLE_FOLLOWING: {\r\n            return { ...state, isFollowing: action.target }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nconst followUnfollowActionCreator = (id) =>\r\n    ({ type: FOLLOW_UNFOLLOW, target: id })\r\n\r\nconst setUsersActionCreator = (users) =>\r\n    ({ type: SET_USERS, users })\r\n\r\nconst setTotalUsersCountActionCreator = (count) =>\r\n    ({ type: SET_TOTAL_USERS_COUNT, count })\r\n\r\nconst toggleFetchingActionCreator = () =>\r\n    ({ type: TOGGLE_FETCHING })\r\n\r\nconst toggleFollowingActionCreator = (target) =>\r\n    ({ type: TOGGLE_FOLLOWING, target })\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleFetchingActionCreator())\r\n    const response = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(setUsersActionCreator(response.items))\r\n    dispatch(setTotalUsersCountActionCreator(response.totalCount))\r\n    dispatch(toggleFetchingActionCreator())\r\n}\r\n\r\nexport const followThunkCreator = (id) => async (dispatch) => {\r\n    dispatch(toggleFollowingActionCreator(id))\r\n    let response = await usersAPI.follow(id)\r\n    if (response.resultCode === 0) {\r\n        dispatch(followUnfollowActionCreator(id))\r\n    }\r\n    dispatch(toggleFollowingActionCreator())\r\n\r\n}\r\n\r\nexport const unfollowThunkCreator = (id) => async (dispatch) => {\r\n    dispatch(toggleFollowingActionCreator(id))\r\n    const response = await usersAPI.unfollow(id)\r\n    if (response.resultCode === 0) {\r\n        dispatch(followUnfollowActionCreator(id))\r\n    }\r\n    dispatch(toggleFollowingActionCreator())\r\n}\r\n\r\n\r\nexport default usersReducer","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './Users.css'\r\nimport Paginator from '../common/Paginator/Paginator'\r\nimport User from './User/User'\r\nimport {\r\n    getUsersThunkCreator,\r\n    followThunkCreator,\r\n    unfollowThunkCreator\r\n} from '../../data/usersReducer'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport { WithAuthRedirect } from '../../hoc/WithAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\nclass Users extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsersThunkCreator(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"usersWrapper\">\r\n                {this.props.isFetching ? <Preloader /> :\r\n                    <div>\r\n                        <Paginator totalUsersCount={this.props.totalUsersCount}\r\n                            pageSize={this.props.pageSize}\r\n                            portionPages={this.props.portionPages}\r\n                            currentPage={this.props.currentPage}\r\n                            onPageChanged={this.onPageChanged}\r\n                        />\r\n                        {\r\n                            this.props.users.map(user => {\r\n                                return (\r\n                                    <User key={user.id}\r\n                                        user={user}\r\n                                        isFollowing={this.props.isFollowing}\r\n                                        follow={this.props.followThunkCreator}\r\n                                        unfollow={this.props.unfollowThunkCreator}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.users.users,\r\n        pageSize: state.users.pageSize,\r\n        portionPages: state.users.portionPages,\r\n        totalUsersCount: state.users.totalUsersCount,\r\n        currentPage: state.users.currentPage,\r\n        isFetching: state.users.isFetching,\r\n        isFollowing: state.users.isFollowing\r\n    }\r\n}\r\nconst UsersContainer = compose(\r\n    connect(mapStateToProps, {\r\n        getUsersThunkCreator,\r\n        followThunkCreator,\r\n        unfollowThunkCreator\r\n\r\n    }),\r\n    WithAuthRedirect\r\n)(Users)\r\n\r\nexport default UsersContainer","import { profileAPI } from \"../api/api\"\r\nimport { ADD_POST, LIKE_POST, SET_USER_PROFILE, UPDATE_STATUS } from \"./types\"\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, text: \"Первый пост\", isLiked: false },\r\n        { id: 2, text: \"Второй пост\", isLiked: false }\r\n    ],\r\n    userProfile: null,\r\n    status: \"\"\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: state.posts.length + 1,\r\n                text: action.newPostText,\r\n                isLiked: false\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        case LIKE_POST:\r\n            return{\r\n                ...state,\r\n                posts: [...state.posts.map(post => {\r\n                    if(post.id === action.id){\r\n                        let isLiked = post.isLiked\r\n                        return {...post, isLiked: !isLiked}\r\n                    }\r\n                    return post\r\n                })]\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                userProfile: action.profile,\r\n                status: action.profile.aboutMe\r\n            }\r\n        case UPDATE_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.message\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nconst setUserProfileActionCreator = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE, profile\r\n    }\r\n}\r\n\r\nconst updateStatusActionCreator = (message) => {\r\n    return {\r\n        type: UPDATE_STATUS, message\r\n    }\r\n}\r\n\r\nexport const likePostActionCreator = (id) => {\r\n    return {\r\n        type: LIKE_POST, id\r\n    }  \r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\n\r\nexport const getProfileThunkCreator = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfileActionCreator(response))\r\n    \r\n}\r\n\r\n\r\nexport const updateStatusThunkCreator = (message) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(message)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(updateStatusActionCreator(message))\r\n    }\r\n}\r\n\r\nexport default profileReducer","import React from 'react'\r\nimport './Post.css'\r\n\r\nconst Post = (props) => {\r\n    return(\r\n        <div className=\"post\">\r\n                <div className=\"user_info\">\r\n                    <img alt=\"\" src=\"./img/userAva.jpg\" />\r\n                    <p className=\"name\">User</p>\r\n                </div>\r\n                <p className=\"post_text\">{props.text}</p>\r\n                <div className=\"likeButtonWrapper\">\r\n                    <span className=\"likeButton\" \r\n                    style={{\r\n                        backgroundImage: `url(./img/heartIcon${props.isLiked ? \"Red\" : \"Black\"}.png)`,\r\n                        backgroundSize: \"cover\"\r\n                    }}\r\n                    onClick={() => props.likePost(props.id)}\r\n                    ></span>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport { Field, reduxForm, reset } from 'redux-form'\r\nimport { maxLengthCreator, requiredField } from '../../../utils/validators/validator'\r\nimport { Input } from '../../common/FormControls/FormsControl'\r\nimport './MyPosts.css'\r\nimport Post from './Post/Post'\r\n\r\nconst maxLength300 = maxLengthCreator(300)\r\n\r\nconst NewPostForm = (props) => {\r\n    return (\r\n        <form className=\"contentText\" onSubmit={props.handleSubmit}>\r\n            <Field component={Input}\r\n                className=\"newPostInput\"\r\n                name=\"newPost\"\r\n                placeholder=\"Whats' new ?\"\r\n                validate={[requiredField, maxLength300]}\r\n                type=\"text\"\r\n            />\r\n            <button className=\"addPostButton\">Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxNewPostForm = reduxForm({ form: \"NewPostForm\" })(NewPostForm)\r\n\r\nconst MyPosts = (props) => {\r\n    let onAddPost = (values, dispatch) => {\r\n        props.addPost(values.newPost)\r\n        dispatch(reset('NewPostForm'))\r\n    }\r\n\r\n    return (\r\n        <div className=\"myPosts\">\r\n            <ReduxNewPostForm onSubmit={onAddPost} />\r\n            {props.posts.map(post => <Post\r\n                id={post.id}\r\n                text={post.text}\r\n                isLiked={post.isLiked}\r\n                likePost={props.likePost}\r\n                key={post.id}\r\n            />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts\r\n","import { connect } from 'react-redux'\r\nimport { addPostActionCreator, likePostActionCreator } from '../../../data/profileReducer'\r\nimport MyPosts from './MyPosts'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profile.posts\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        },\r\n        likePost: (id) => {\r\n            dispatch(likePostActionCreator(id))\r\n        } \r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer\r\n","import React from 'react'\r\nimport './ProfileInfo.css'\r\n\r\nclass ProfileStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            editMode: false,\r\n            newStatus: this.props.status ? this.props.status : \"\"\r\n        }\r\n    }\r\n\r\n    toggleEditMode = () => {\r\n        let editMode = this.state.editMode\r\n        this.setState({\r\n            editMode: !editMode\r\n        })\r\n    }\r\n\r\n    changeStatusText = (e) => {\r\n        this.setState({\r\n            newStatus: e.target.value\r\n        })\r\n    }\r\n\r\n    updateStatus = () => {\r\n        this.props.updateStatus(this.state.newStatus)\r\n        this.setState({\r\n            status: this.props.status\r\n        })\r\n        this.toggleEditMode()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                newStatus: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                { this.state.editMode ?\r\n                    <input type=\"text\" \r\n                           autoFocus={true} \r\n                           onBlur={this.updateStatus} \r\n                           value={this.state.newStatus}\r\n                           onChange={this.changeStatusText}\r\n                    />\r\n                    :\r\n                    <p className=\"profileStatus\" onClick={this.toggleEditMode}>\r\n                        {this.props.status ? \"Status: \" + this.props.status : \"No status\"}\r\n                    </p>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React from 'react'\r\nimport './ProfileInfo.css'\r\nimport ProfileStatus from './ProfileStatus'\r\n\r\nconst ProfileInfo = (props) => {\r\n    return (\r\n        <div className=\"profileInfo\">\r\n            <div className=\"profileInfoHeader\"> \r\n            <div className=\"profileAvatar\">\r\n                <img alt=\"\" src={props.userProfile.photos.large ? props.userProfile.photos.large : \"./img/userAva.jpg\"} />\r\n            </div>\r\n            <div className=\"profileNameStatus\">\r\n                <p className=\"profileName\">\r\n                    {props.userProfile.fullName}\r\n                </p>\r\n               <ProfileStatus status={props.status}\r\n                              updateStatus={props.updateStatus}\r\n               />\r\n            </div>\r\n            </div>\r\n            <ul className=\"profileDescription\">\r\n                <li className=\"profileLookingForAJobStatus\">\r\n                    In the job search: \r\n                    {props.userProfile.lookingForAJob ? \" Yes\" : \" No\"}\r\n                </li>\r\n                <li className=\"profileLookingForAJobDescription\">\r\n                    Looking for a job status: {props.userProfile.lookingForAJobDescription ? props.userProfile.lookingForAJobDescription : \"No\"}\r\n                </li>\r\n                <ul className=\"profileContacts\">\r\n                    {props.userProfile.contacts.facebook ? <li>Facebook: <a href=\"/profile\" >{props.userProfile.contacts.facebook}</a> </li> : null}\r\n                    {props.userProfile.contacts.github ? <li>Github: <a href=\"/profile\">{props.userProfile.contacts.github}</a></li> : null}\r\n                    {props.userProfile.contacts.instagram ? <li>Instagram: <a href=\"/profile\">{props.userProfile.contacts.instagram}</a></li> : null}\r\n                    {props.userProfile.contacts.mainLink ? <li>MainLink: <a href=\"/profile\">{props.userProfile.contacts.mainLink}</a></li> : null}\r\n                    {props.userProfile.contacts.twitter ? <li>Twitter: <a href=\"/profile\">{props.userProfile.contacts.twitter}</a></li> : null}\r\n                    {props.userProfile.contacts.vk ? <li>VK: <a href=\"/profile\">{props.userProfile.contacts.vk}</a></li> : null}\r\n                    {props.userProfile.contacts.website ? <li>WebSite: <a href=\"/profile\">{props.userProfile.contacts.website}</a></li> : null}\r\n                    {props.userProfile.contacts.youtube ? <li>YouTube: <a href=\"/profile\">{props.userProfile.contacts.youtube}</a></li> : null}\r\n\r\n                </ul>\r\n            </ul>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react'\r\nimport './Profile.css'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport Preloader from '../common/Preloader/Preloader'\r\n\r\nconst Profile = (props) => {\r\n    if(!props.userProfile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div className=\"content\">\r\n            <div style={{ backgroundImage: 'url(./img/contentImg.jpg)' }}\r\n                className=\"content_img\"\r\n            >\r\n            </div>\r\n            <ProfileInfo userProfile={props.userProfile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Profile from './Profile'\r\nimport { getProfileThunkCreator, updateStatusThunkCreator } from '../../data/profileReducer'\r\nimport { WithAuthRedirect } from '../../hoc/WithAuthRedirect'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n        }\r\n        this.props.getProfileThunkCreator(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile \r\n                userProfile={this.props.userProfile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatusThunkCreator}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    userProfile: state.profile.userProfile,\r\n    status: state.profile.status,\r\n    authorizedUserId: state.auth.id\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getProfileThunkCreator, updateStatusThunkCreator }),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer)\r\n","import { stopSubmit } from \"redux-form\"\r\nimport { authAPI } from \"../api/api\"\r\nimport { SET_USER_DATA, STOP_LOADING } from \"./types\"\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    isLoading: true\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            let isAuth = state.isAuth\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: !isAuth\r\n            }\r\n        case STOP_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: false\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nconst setAuthUserData = (id, email, login) =>\r\n    ({ type: SET_USER_DATA, data: { id, email, login } })\r\n\r\nconst stopLoadingActionCreator = () =>\r\n    ({ type: STOP_LOADING })\r\n\r\nexport const authenticationThunkCreator = () => async (dispatch) => {\r\n    let response = await authAPI.authentication()\r\n    if (response.resultCode === 0) {\r\n        let { id, login, email } = response.data\r\n        dispatch(setAuthUserData(id, email, login))\r\n        dispatch(stopLoadingActionCreator())\r\n    } else dispatch(stopLoadingActionCreator())\r\n}\r\n\r\n\r\n\r\nexport const loginThunkCreator = (email, password, rememberMe = false) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.resultCode === 0) {\r\n        dispatch(authenticationThunkCreator())\r\n    } else {\r\n        console.log(response)\r\n        const error = response.messages\r\n        dispatch(stopSubmit(\"login\", { _error: error }))\r\n    }\r\n}\r\n\r\n\r\nexport const logoutThunkCreator = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default authReducer","import React from 'react'\r\nimport './Header.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header>\r\n            <NavLink to=\"/\">\r\n                <img alt=\"\" src=\"./img/logo.png\" />\r\n            </NavLink>\r\n            <div className=\"loginBlock\">\r\n            {props.isAuth?\r\n                <button className=\"logoutButton\" onClick={props.logoutThunkCreator} to={'/login'}>{\r\n                    \"Exit\" \r\n                }</button>\r\n            : null  \r\n            }    \r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { logoutThunkCreator } from '../../data/authReducer'\r\nimport Header from './Header'\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { logoutThunkCreator })(HeaderContainer)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { loginThunkCreator } from '../../data/authReducer'\r\nimport { requiredField } from '../../utils/validators/validator'\r\nimport { Input } from '../common/FormControls/FormsControl'\r\nimport './Login.css'\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Email'}\r\n                    name={\"email\"}\r\n                    type=\"text\"\r\n                    component={Input}\r\n                    validate={[requiredField]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'}\r\n                    name={\"password\"}\r\n                    type=\"password\"\r\n                    component={Input}\r\n                    validate={[requiredField]}\r\n                />\r\n            </div>\r\n            { props.error &&\r\n                <div>\r\n                    <p style={{color: \"red\"}}>{props.error}</p>\r\n                </div>\r\n            }\r\n            <div>\r\n                <Field type=\"checkbox\"\r\n                    name={\"rememberMe\"}\r\n                    component={Input}\r\n                /> remember me\r\n                </div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxLoginForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.loginThunkCreator(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    return (\r\n        <div className=\"loginWrap\">\r\n            <h1>Login</h1>\r\n            <ReduxLoginForm onSubmit={onSubmit} />\r\n            <p>Логин: olegporoshin1906@gmail.com</p>\r\n            <p>Пароль: social</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { loginThunkCreator })(Login)","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport { Route, withRouter } from 'react-router-dom';\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport { authenticationThunkCreator } from './data/authReducer'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.authenticationThunkCreator()\n  }\n  render() {\n    return (\n      <div>\n        <HeaderContainer />\n        <div className=\"appBackground\">\n        <div className=\"app-wrapper\">\n          <Navbar />\n          <div className=\"app-content\">\n            <Route exact path='/'\n              render={() => <ProfileContainer />}\n            />\n            <Route exact path=\"/dialogs\"\n              render={() => <DialogsContainer />}\n            />\n            <Route path='/profile/:userId?'\n              render={() => <ProfileContainer />}\n            />\n            <Route path=\"/users\"\n              render={() => <UsersContainer />}\n            />\n            <Route path=\"/login\"\n              render={() => <Login />}\n            />\n          </div>\n        </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default compose( \n  withRouter, \n  connect(null, {authenticationThunkCreator}))\n  (App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer","import { combineReducers } from \"redux\"\r\nimport profileReducer from \"./profileReducer\"\r\nimport dialogsReducer from './dialogsReducer'\r\nimport sidebarReducer from './sidebarReducer'\r\nimport usersReducer from \"./usersReducer\"\r\nimport authReducer from \"./authReducer\"\r\nimport { reducer as formReducer} from 'redux-form'\r\n\r\nlet rootReducer = combineReducers({\r\n    profile: profileReducer,\r\n    dialogs: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    users: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n})\r\n\r\nexport default rootReducer","import { applyMiddleware, compose, createStore } from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer,  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  ))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './data/reduxStore';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <HashRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}