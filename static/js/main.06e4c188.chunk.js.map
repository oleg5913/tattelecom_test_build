{"version":3,"sources":["api/api.ts","data/actionTypes.js","data/galleryReducer.ts","data/postsReducer.ts","data/usersReducer.ts","data/rootReducer.ts","data/reduxStore.ts","components/Navbar/Navbar.js","components/Profile/Profile.js","components/Posts/Post/Post.tsx","components/Posts/Posts.tsx","components/Gallery/Album/Album.tsx","components/Gallery/Gallery.tsx","components/Gallery/Photos/PhotoCard/PhotoCard.tsx","components/Gallery/Photos/Photos.tsx","utils/validator.js","components/common/FormsControl.js","components/Wall/MyPost.tsx","components/Wall/Wall.js","components/Users/User/User.js","components/Users/Users.tsx","components/Users/UserProfile/UserProfile.tsx","App.js","index.js"],"names":["instance","require","default","create","withCredentials","baseURL","usersAPI","get","then","response","postsAPI","id","body","post","galleryAPI","SET_USERS","SET_ALBUMS","SET_PHOTOS","SET_POSTS","NEW_POST","initialState","albums","photos","galleryReducer","state","action","type","posts","myPosts","text","newMyPostActionCreator","postsReducer","users","usersReducer","rootReducer","combineReducers","gallery","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Navbar","className","src","to","Profile","Post","props","useState","isLiked","setLike","name","userName","onClick","PostsContainer","connect","map","userData","find","user","userId","filteredUserData","username","Album","title","Gallery","style","fontSize","length","album","PhotoCard","backgroundImage","withRouter","match","params","filter","photo","albumId","url","requiredField","value","undefined","Input","input","meta","hasError","touched","error","MyPost","ReduxNewPostForm","reduxForm","onSubmit","handleSubmit","Field","component","placeholder","validate","WallContainer","newPostThunkCreator","dispatch","a","values","newPost","reset","reverse","User","UsersContainer","profile","phone","email","address","city","street","company","App","this","getPostsThunkCreator","getUsersThunkCreator","getAlbumsThunkCreator","getPhotosThunkCreator","from","exact","path","render","React","Component","AppContainer","data","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.06e4c188.chunk.js","sourcesContent":["import { albumInterface, photoInterface, postInterface, userInterface } from \"../types/types\";\r\n\r\nconst { default: axios } = require(\"axios\");\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://jsonplaceholder.typicode.com/'\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers () {\r\n        return instance.get(`users`)\r\n            .then((response: Array<userInterface>) => response)\r\n    }\r\n}\r\n\r\nexport const postsAPI = {\r\n    getPosts () {\r\n        return instance.get(`posts`)\r\n            .then((response: Array<postInterface>) => response)\r\n    },\r\n    newPost(id: number, body: string) {\r\n        return instance.post(`posts?userId=${1}&id=${id}&title=${\"null\"}&body=${body}`)\r\n    }\r\n}\r\n\r\nexport const galleryAPI = {\r\n    getAlbums () {\r\n        return instance.get(`albums`)\r\n            .then((response: Array<albumInterface>) => response)\r\n    },\r\n    getPhotos () {\r\n        return instance.get(`photos`)\r\n            .then((response: Array<photoInterface>) => response)\r\n    }\r\n}","export const SET_USERS = 'SET-USERS'\r\nexport const SET_ALBUMS = 'SET-ALBUMS'\r\nexport const SET_PHOTOS = 'SET-PHOTOS'\r\nexport const SET_POSTS = 'SET-POSTS'\r\nexport const GET_USER_DATA_FOR_POST = 'GET_USER_DATA_FOR_POST'\r\nexport const NEW_POST = 'NEW_POST'","import { Dispatch } from \"redux\"\r\nimport { ThunkAction } from \"redux-thunk\"\r\nimport { galleryAPI } from \"../api/api\"\r\nimport { albumInterface, photoInterface } from \"../types/types\"\r\nimport { SET_ALBUMS, SET_PHOTOS } from \"./actionTypes\"\r\nimport { appStateType } from \"./rootReducer\"\r\n\r\nlet initialState = {\r\n    albums: [] as Array<albumInterface>,\r\n    photos: [] as Array<photoInterface>\r\n}\r\n\r\nconst galleryReducer = (state = initialState, action: any): typeof initialState => {\r\n    switch (action.type) {\r\n        case SET_ALBUMS:\r\n            return {\r\n                ...state,\r\n                albums: [...action.albums]\r\n            }\r\n        case SET_PHOTOS:\r\n            return {\r\n                ...state,\r\n                photos: [...action.photos]\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\ntype actionTypes = setAlbumsActionInterface | setPhotosActionInterface \r\n\r\ninterface setAlbumsActionInterface {\r\n    type: typeof SET_ALBUMS,\r\n    albums: Array<albumInterface>\r\n}\r\n\r\ninterface setPhotosActionInterface {\r\n    type: typeof SET_PHOTOS,\r\n    photos: Array<photoInterface>\r\n}\r\n\r\ntype thunkType = ThunkAction<Promise<void>, appStateType, any, actionTypes>\r\n\r\nconst setAlbumsActionCreator = (albums: Array<albumInterface>): setAlbumsActionInterface => \r\n    ({type: SET_ALBUMS, albums: albums})\r\n\r\nconst setPhotosActionCreator = (photos: Array<photoInterface>): setPhotosActionInterface => \r\n    ({type: SET_PHOTOS, photos: photos})\r\n\r\nexport const getAlbumsThunkCreator = (): thunkType => async (dispatch: Dispatch<actionTypes>) => {\r\n    let response = await galleryAPI.getAlbums()\r\n    dispatch(setAlbumsActionCreator(response.data))\r\n}\r\n\r\nexport const getPhotosThunkCreator = (): thunkType => async (dispatch: Dispatch<actionTypes>) => {\r\n    let response = await galleryAPI.getPhotos()\r\n    dispatch(setPhotosActionCreator(response.data))\r\n}\r\n\r\nexport default galleryReducer\r\n","import { Dispatch } from \"redux\"\r\nimport { ThunkAction } from \"redux-thunk\"\r\nimport { postsAPI } from \"../api/api\"\r\nimport { myPostInterface, postInterface } from \"../types/types\"\r\nimport { NEW_POST, SET_POSTS } from \"./actionTypes\"\r\nimport { appStateType } from \"./rootReducer\"\r\n\r\nlet initialState = {\r\n    posts: [] as Array<postInterface>,\r\n    myPosts: [\r\n        {id: 99, text: 'Привет! Это мой первый пост'},\r\n        {id: 100, text: 'Второй пост'}\r\n    ] as Array<myPostInterface>\r\n}\r\n\r\nconst postsReducer = (state = initialState, action: any): typeof initialState => {\r\n    switch (action.type) {\r\n        case SET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: [...action.posts]\r\n            }\r\n        case NEW_POST:\r\n            return {\r\n                ...state,\r\n                myPosts: [...state.myPosts,\r\n                {\r\n                    id: action.id,\r\n                    text: action.text\r\n                }\r\n                ]\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\ntype actionTypes = setPostsActionInterface | newMyPostsActionInterface \r\n\r\ninterface setPostsActionInterface {\r\n    type: typeof SET_POSTS,\r\n    posts: Array<postInterface>\r\n}\r\n\r\ninterface newMyPostsActionInterface {\r\n    type: typeof NEW_POST,\r\n    id: number,\r\n    text: string\r\n}\r\n\r\ntype thunkType = ThunkAction<Promise<void>, appStateType, any, actionTypes>\r\n\r\nconst setPostsActionCreator = (posts: Array<postInterface>): setPostsActionInterface =>\r\n    ({ type: SET_POSTS, posts: posts })\r\n\r\nconst newMyPostActionCreator = (id: number, text: string): newMyPostsActionInterface =>\r\n    ({ type: NEW_POST, id: id, text: text })\r\n\r\nexport const getPostsThunkCreator = (): thunkType => async (dispatch: Dispatch<actionTypes>) => {\r\n    let response = await postsAPI.getPosts()\r\n    dispatch(setPostsActionCreator(response.data))\r\n}\r\n\r\nexport const newPostThunkCreator = (id: number, body: string): thunkType => async (dispatch: Dispatch<actionTypes>) => {\r\n    await postsAPI.newPost(id, body)\r\n    dispatch(newMyPostActionCreator(id, body))\r\n}\r\n\r\nexport default postsReducer","import { Dispatch } from \"redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { usersAPI } from \"../api/api\";\r\nimport { userInterface } from \"../types/types\";\r\nimport { SET_USERS } from \"./actionTypes\";\r\nimport { appStateType } from \"./rootReducer\";\r\n\r\nlet initialState = {\r\n    users: [] as Array<userInterface>\r\n}\r\n\r\nconst usersReducer = (state = initialState, action: actionType): typeof initialState => {\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users] \r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\ntype actionType = setUsersActionInterface\r\n\r\ninterface setUsersActionInterface {\r\n    type: typeof SET_USERS,\r\n    users: Array<userInterface>\r\n}\r\n\r\nconst setUsersActionCreator = (users: Array<userInterface>): setUsersActionInterface => \r\n    ({ type: SET_USERS, users: users})\r\n\r\nexport const getUsersThunkCreator = (): ThunkAction<Promise<void>, appStateType, any, actionType> => async (dispatch: Dispatch<actionType>) => {\r\n    let response = await usersAPI.getUsers()\r\n    dispatch(setUsersActionCreator(response.data))\r\n}\r\n\r\nexport default usersReducer","import { combineReducers } from \"redux\";\r\nimport galleryReducer from \"./galleryReducer\";\r\nimport postsReducer from \"./postsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport { reducer as formReducer} from 'redux-form'\r\n\r\ntype rootReducerType = typeof rootReducer\r\nexport type appStateType = ReturnType<rootReducerType>\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    users: usersReducer,\r\n    posts: postsReducer,\r\n    gallery: galleryReducer,\r\n    form: formReducer\r\n})\r\n\r\nexport default rootReducer","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\n//@ts-ignore \r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer,  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  ))\r\n\r\nexport default store","import React from 'react'\r\nimport './Navbar.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navBar\">\r\n            <div className=\"navBarMyCard\">\r\n                <img src=\"./img/myAva.png\" />\r\n                <p className=\"myCardName\">Порошин О.</p>\r\n                <p className=\"myCardSpec\">Web Dev.</p>\r\n                <p className=\"myCardStatus\">Статус: заходил 5 минут назад</p>\r\n            </div>\r\n            <NavLink to='/profile'>\r\n                <div className= 'navBarItem'>\r\n                    <p>Профиль</p>\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/news'>\r\n                <div className='navBarItem'>\r\n                    <p>Новости</p>\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/gallery'>\r\n                <div className='navBarItem'>\r\n                    <p>Фотографии</p>\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/wall'>\r\n                <div className='navBarItem'>\r\n                    <p>Стена</p>\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/users'>\r\n                <div className='navBarItem'>\r\n                    <p>Все пользователи</p>\r\n                </div>\r\n            </NavLink>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\nimport './Profile.css'\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div className=\"profileWrap\">\r\n            <div className=\"profile\">\r\n                <div className=\"accountInfo\">\r\n                    <p className=\"profileInfoTitle\">Информация об аккаунте</p>\r\n                    <div className=\"profileInfo\">\r\n                        <div className=\"profileInfoRow\">\r\n                            <div className=\"profileInfoItem\">\r\n                                <div className=\"profileInfoItemName\">\r\n                                    <p>Имя</p>\r\n                                </div>\r\n                                <div className=\"profileInfoItemValue\">\r\n                                    <p>Олег</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"profileInfoItem\">\r\n                                <div className=\"profileInfoItemName\">\r\n                                    <p>Фамилия</p>\r\n                                </div>\r\n                                <div className=\"profileInfoItemValue\">\r\n                                    <p>Порошин</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profileInfoRow\">\r\n                            <div className=\"profileInfoItem\">\r\n                                <div className=\"profileInfoItemName\">\r\n                                    <p>Логин</p>\r\n                                </div>\r\n                                <div className=\"profileInfoItemValue\">\r\n                                    <p>@oleg_5913</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"profileInfoItem\">\r\n                                <div className=\"profileInfoItemName\">\r\n                                    <p>Эл. почта</p>\r\n                                </div>\r\n                                <div className=\"profileInfoItemValue\">\r\n                                    <p>olegporoshin1906@gmail.com</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"profileInfoTitle\">Информация о профиле</p>\r\n                    <div className=\"profileInfo\">\r\n                        <div className=\"profileInfoRow\">\r\n                            <div className=\"profileInfoItem\">\r\n                                <div className=\"profileInfoItemName\">\r\n                                    <p>Город</p>\r\n                                </div>\r\n                                <div className=\"profileInfoItemValue\">\r\n                                    <p>Казань</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"profileInfoItem\">\r\n                                <div className=\"profileInfoItemName\">\r\n                                    <p>Страна</p>\r\n                                </div>\r\n                                <div className=\"profileInfoItemValue\">\r\n                                    <p>Россия</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profileInfoRow\">\r\n                            <div className=\"profileInfoItem\">\r\n                                <div className=\"profileInfoItemName\">\r\n                                    <p>Место работы</p>\r\n                                </div>\r\n                                <div className=\"profileInfoItemValue\">\r\n                                    <p>Казань, ПАО \"Таттелеком\"</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"profileInfoItem\" id=\"lastItem\">\r\n                                <p>Закрытый профиль?</p>\r\n                                <div className=\"button r\" id=\"button-1\">\r\n                                    <input type=\"checkbox\" className=\"checkbox\" />\r\n                                    <div className=\"knobs\"></div>\r\n                                    <div className=\"layer\"></div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React, { FC, useState } from 'react'\r\nimport './Post.css'\r\n\r\ninterface propsInterface {\r\n    name: string,\r\n    userName: string,\r\n    body: string,\r\n    id: number,\r\n    userId: number\r\n}\r\n\r\nconst Post: FC<propsInterface> = (props) => {\r\n    const [isLiked, setLike] = useState(false)\r\n    const handleClick = () => {\r\n        setLike(!isLiked)\r\n    }\r\n    return(\r\n        <div className=\"post\">\r\n            <div className=\"postHead\">\r\n                <img src=\"./img/userIcon.png\"/>\r\n                <div className=\"postAboutUser\">\r\n                    <p>{props.name}</p>\r\n                    <p>{props.userName}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"postContent\">\r\n                <p>{props.body}</p>\r\n            </div>\r\n            <div className=\"postActions\">\r\n                <img src={ isLiked ? './img/likeIconRed.png' : './img/likeIconBlack.png'} onClick={handleClick}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import { connect } from 'react-redux'\r\nimport React, { FC } from 'react'\r\nimport Post from './Post/Post'\r\nimport './Posts.css'\r\nimport { postInterface, userInterface } from '../../types/types'\r\nimport { appStateType } from '../../data/rootReducer'\r\n\r\ninterface propsInterface {\r\n    posts: Array<postInterface>, \r\n    users: Array<userInterface>\r\n}\r\n\r\nconst Posts: FC<propsInterface> = (props) => {\r\n        return (\r\n            <div className=\"postsWrap\">\r\n                <div className=\"posts\">\r\n                    {props.posts.map((post: any) => {\r\n                        let userData: any = props.users.find((user: any): boolean => user.id == post.userId)\r\n                        let filteredUserData = {\r\n                            name: userData.name,\r\n                            userName: userData.username\r\n                        }\r\n                        return (\r\n                            <Post\r\n                                id={post.id}\r\n                                key={post.id}\r\n                                name={filteredUserData.name}\r\n                                userName={filteredUserData.userName}\r\n                                userId={post.userId}\r\n                                body={post.body}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nlet mapStateToProps = (state: appStateType): propsInterface => {\r\n    return {\r\n        posts: state.posts.posts,\r\n        users: state.users.users\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect<propsInterface, null, null, appStateType>(\r\n    mapStateToProps)(Posts)\r\n\r\nexport default PostsContainer\r\n","import { FC, useState } from \"react\"\r\nimport { NavLink } from 'react-router-dom'\r\nimport { albumInterface } from \"../../../types/types\"\r\nimport './Album.css'\r\n\r\nconst Album: FC<albumInterface> = (props) => {\r\n    const [isLiked, setLike] = useState<boolean>(false)\r\n    const handleClick = () => {\r\n        setLike(!isLiked)\r\n    }\r\n    return (\r\n        <div className=\"album\">\r\n            <NavLink to={\"/gallery/\" + props.id}>\r\n                <div className=\"albumCover\">\r\n\r\n                </div>\r\n            </NavLink>\r\n            <div className=\"albumDescription\">\r\n                <p>{props.title}</p>\r\n                <img src={isLiked ? './img/likeIconRed.png' : './img/likeIconBlack.png'} onClick={handleClick} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Album","import { FC } from 'react'\r\nimport { albumInterface } from '../../types/types'\r\nimport Album from './Album/Album'\r\nimport './Gallery.css'\r\n\r\ninterface propsInterface {\r\n    albums: Array<albumInterface>\r\n}\r\n\r\nconst Gallery: FC<propsInterface> = (props) => {\r\n    return (\r\n        <div className=\"galleryWrap\">\r\n            <div className=\"gallery\">\r\n                <div className=\"galleryHead\">\r\n                    <p>Галерея</p>\r\n                    <p style={{fontSize: '0.8em'}}>({props.albums.length} альбомов)</p>\r\n                </div>\r\n                <div className=\"albums\">\r\n                    {props.albums.map(album => {\r\n                        return (\r\n                            <Album \r\n                                userId={album.userId}\r\n                                key={album.id}\r\n                                id={album.id}\r\n                                title={album.title}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gallery","import { FC } from 'react'\r\nimport './PhotoCard.css'\r\n\r\ninterface propsInterface {\r\n    src: string\r\n}\r\n\r\nconst PhotoCard: FC<propsInterface>  = (props) => {\r\n    return (\r\n        <div className=\"photo\" style={{backgroundImage: `url(${props.src})`}}></div>\r\n    )\r\n}\r\n\r\nexport default PhotoCard","import React, { FC } from 'react'\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\r\nimport { photoInterface } from '../../../types/types'\r\nimport PhotoCard from './PhotoCard/PhotoCard'\r\nimport './Photos.css'\r\n\r\ntype propsType = RouteComponentProps & {\r\n    photos: Array<photoInterface>\r\n    match: any\r\n}\r\n\r\nconst Photos: FC<propsType> = (props) => {\r\n        const id = props.match.params.id\r\n        const photos = props.photos.filter(photo => photo.albumId == id)\r\n        return (\r\n            <div className=\"photosWrap\">\r\n                <div className=\"photos\">\r\n                    <div className=\"photosHead\">\r\n                        <p>{photos.length} фотографий</p>\r\n                    </div>\r\n                    <div className=\"photosContent\">\r\n                    {photos.map(photo => {\r\n                        return <PhotoCard\r\n                            src={photo.url}\r\n                        />\r\n                    })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default withRouter(Photos)","export const requiredField = (value) => {\r\n    return value? undefined : \"Введите текст\"\r\n}","import './FormsControl.css'\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={\"formControl\"}>\r\n            { hasError && <span>{meta.error}</span>}\r\n            <textarea type={props.type} {...input} {...props}></textarea>\r\n        </div>\r\n    )\r\n}","import React, { FC, useState } from 'react'\r\nimport './MyPost.css'\r\n\r\ninterface propsInterface {\r\n    body: string\r\n}\r\n\r\nconst MyPost: FC<propsInterface> = (props) => {\r\n    const [isLiked, setLike] = useState<boolean>(false)\r\n    const handleClick = () => {\r\n        setLike(!isLiked)\r\n    }\r\n    return(\r\n        <div className=\"myPost\">\r\n            <div className=\"myPostHead\">\r\n                <img src=\"./img/myAva.png\"/>\r\n                <div className=\"myPostAboutUser\">\r\n                    <p>Порошин О.</p>\r\n                    <p>@oleg_5913</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"myPostContent\">\r\n                <p>{props.body}</p>\r\n            </div>\r\n            <div className=\"myPostActions\">\r\n                <img src={ isLiked ? './img/likeIconRed.png' : './img/likeIconBlack.png'} onClick={handleClick}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPost","import { connect } from 'react-redux'\r\nimport { Field, reduxForm, reset } from 'redux-form'\r\nimport { newPostThunkCreator } from '../../data/postsReducer'\r\nimport { requiredField } from '../../utils/validator'\r\nimport { Input } from '../common/FormsControl'\r\nimport MyPost from './MyPost'\r\nimport './Wall.css'\r\n\r\nconst NewPostForm = (props) => {\r\n    return (\r\n        <form className='newPostForm' onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <div className=\"formHead\">\r\n                    <img src=\"./img/myAva.png\" />\r\n                    <div>\r\n                        <p className=\"myCardName\">Порошин О.</p>\r\n                        <p className=\"myCardSpec\">Web Dev.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"newPostFormInput\">\r\n            <Field\r\n                className=\"newPostInput\"\r\n                name=\"newPost\"\r\n                component={Input}\r\n                placeholder=\"Что нового?\"\r\n                validate={requiredField}\r\n                type=\"text\"\r\n            />\r\n             <button className=\"sendPostButton\">Отправить сообщение</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxNewPostForm = reduxForm({ form: 'NewPostForm' })(NewPostForm)\r\n\r\nconst Wall = (props) => {\r\n    let addPost = (values, dispatch) => {\r\n        props.newPostThunkCreator(props.posts.length + 1, values.newPost)\r\n        dispatch(reset('NewPostForm'))\r\n    }\r\n    return (\r\n        <div className=\"wallWrap\">\r\n            <div className=\"wall\">\r\n                <ReduxNewPostForm onSubmit={addPost} />\r\n                <div className=\"myPosts\">\r\n                    {props.myPosts.map(post => {\r\n                        return (\r\n                            <MyPost \r\n                                body={post.text}\r\n                                key={post.id}\r\n                            />\r\n                        )\r\n                    }).reverse()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        myPosts: state.posts.myPosts,\r\n        posts: state.posts.posts\r\n    }\r\n}\r\n\r\nconst WallContainer = connect(\r\n    mapStateToProps, {\r\n    newPostThunkCreator\r\n})(Wall)\r\n\r\nexport default WallContainer","import './User.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst User = (props) => {\r\n    return (\r\n        <NavLink to={'/users/'+ props.id}>\r\n        <div className=\"user\">\r\n            <img src=\"./img/userIcon.png\" />\r\n            <div>\r\n                <p className=\"myCardName\">{props.name}</p>\r\n                <p className=\"myCardSpec\">{props.userName}</p>\r\n            </div>\r\n        </div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default User","import { FC } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { appStateType } from '../../data/rootReducer'\r\nimport { userInterface } from '../../types/types'\r\nimport User from './User/User'\r\nimport './Users.css'\r\n\r\ninterface propsInterface {\r\n    users: Array<userInterface>,\r\n}\r\n\r\nconst Users: FC<propsInterface> = (props) => {\r\n    return (\r\n        <div className=\"usersWrap\">\r\n            <div className=\"users\">\r\n                {props.users.map((user: userInterface) => {\r\n                    return (\r\n                        <User\r\n                            name={user.name}\r\n                            userName={user.username}\r\n                            id={user.id}\r\n                            key={user.id}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state: appStateType): propsInterface => {\r\n    return {\r\n        users: state.users.users\r\n    }\r\n}\r\n\r\nconst UsersContainer = connect<propsInterface, null, null, appStateType>(\r\n    mapStateToProps)(Users)\r\n\r\n\r\nexport default UsersContainer","import './UserProfile.css'\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\r\nimport { userInterface } from '../../../types/types'\r\nimport { FC } from 'react'\r\n\r\ntype propsType = RouteComponentProps & {\r\n    users: Array<userInterface>\r\n    match: any\r\n}\r\n\r\nconst UserProfile: FC<propsType> = (props) => {\r\n    const id = props.match.params.id\r\n    const profile: any = props.users.find((user: userInterface) => user.id == id)\r\n    return (\r\n        <div className=\"profileWrap\">\r\n            <div className=\"profile\">\r\n                <div className=\"accountInfo\">\r\n                    <p className=\"profileInfoTitle\">Информация об аккаунте</p>\r\n                    <div className=\"profileInfo\">\r\n                        <div className=\"profileInfoRow\">\r\n                            <div className=\"profileInfoItem\">\r\n                                <div className=\"profileInfoItemName\">\r\n                                    <p>Имя</p>\r\n                                </div>\r\n                                <div className=\"profileInfoItemValue\">\r\n                                    <p>{profile.name}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"profileInfoItem\">\r\n                                <div className=\"profileInfoItemName\">\r\n                                    <p>Телефон</p>\r\n                                </div>\r\n                                <div className=\"profileInfoItemValue\">\r\n                                    <p>{profile.phone}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profileInfoRow\">\r\n                            <div className=\"profileInfoItem\">\r\n                                <div className=\"profileInfoItemName\">\r\n                                    <p>Логин</p>\r\n                                </div>\r\n                                <div className=\"profileInfoItemValue\">\r\n                                    <p>{profile.username}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"profileInfoItem\">\r\n                                <div className=\"profileInfoItemName\">\r\n                                    <p>Эл. почта</p>\r\n                                </div>\r\n                                <div className=\"profileInfoItemValue\">\r\n                                    <p>{profile.email}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"profileInfoTitle\">Информация о профиле</p>\r\n                    <div className=\"profileInfo\">\r\n                        <div className=\"profileInfoRow\">\r\n                            <div className=\"profileInfoItem\">\r\n                                <div className=\"profileInfoItemName\">\r\n                                    <p>Город</p>\r\n                                </div>\r\n                                <div className=\"profileInfoItemValue\">\r\n                                    <p>{profile.address.city}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"profileInfoItem\">\r\n                                <div className=\"profileInfoItemName\">\r\n                                    <p>Улица</p>\r\n                                </div>\r\n                                <div className=\"profileInfoItemValue\">\r\n                                    <p>{profile.address.street}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profileInfoRow\">\r\n                            <div className=\"profileInfoItem\">\r\n                                <div className=\"profileInfoItemName\">\r\n                                    <p>Место работы</p>\r\n                                </div>\r\n                                <div className=\"profileInfoItemValue\">\r\n                                    <p>{profile.company.name}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"profileInfoItem\" id=\"lastItem\">\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(UserProfile)","import React from 'react'\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from './components/Profile/Profile';\nimport { Route, Redirect } from 'react-router-dom'\nimport PostsContainer from './components/Posts/Posts';\nimport { getPostsThunkCreator } from './data/postsReducer'\nimport { getUsersThunkCreator } from './data/usersReducer'\nimport { getAlbumsThunkCreator, getPhotosThunkCreator } from './data/galleryReducer'\nimport { connect } from 'react-redux';\nimport Gallery from './components/Gallery/Gallery';\nimport Photos from './components/Gallery/Photos/Photos';\nimport WallContainer from './components/Wall/Wall';\nimport UsersContainer from './components/Users/Users';\nimport UserProfileContainer from './components/Users/UserProfile/UserProfile';\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.getPostsThunkCreator()\n    this.props.getUsersThunkCreator()\n    this.props.getAlbumsThunkCreator()\n    this.props.getPhotosThunkCreator()\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"appContent\">\n          <Redirect from='/' to='/profile' />\n          <Route exact path='/profile'\n            render={() => <Profile />}\n          />\n          <Route exact path='/news'\n            render={() => <PostsContainer />}\n          />\n          <Route exact path='/gallery'\n            render={ () => <Gallery albums={this.props.albums}/>}\n          />\n          <Route path='/gallery/:id'\n            render={ () => <Photos photos={this.props.photos} />}\n          />\n          <Route exact path='/wall'\n            render={ () => <WallContainer />}\n          />\n          <Route exact path='/users'\n            render={ () => <UsersContainer />}\n          />\n          <Route path='/users/:id'\n            render={ () => <UserProfileContainer users={this.props.users} />}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    albums: state.gallery.albums,\n    photos: state.gallery.photos,\n    users: state.users.users\n  }\n}\n\nconst AppContainer = connect(\n  mapStateToProps, {\n    getUsersThunkCreator,\n    getPostsThunkCreator,\n    getAlbumsThunkCreator,\n    getPhotosThunkCreator\n  }\n)(App)\n\nexport default AppContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport store from './data/reduxStore';\nimport AppContainer from './App';\n\nReactDOM.render(\n  <HashRouter basename={process.env.PUBLIC_URL}>\n  <Provider store={store}>\n      <AppContainer />\n  </Provider>\n</HashRouter>\n    ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}